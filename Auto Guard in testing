local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local HRP = Character:WaitForChild("HumanoidRootPart")

local Court = Workspace:WaitForChild("Courts"):WaitForChild("Court_1")
local Basketball = Court:WaitForChild("Basketball")

local autoGuardEnabled = false -- Toggle state

-- GUI for toggle button
local function createGUI()
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "AutoGuardGUI"
    ScreenGui.ResetOnSpawn = false

    if LocalPlayer:FindFirstChild("PlayerGui") then
        ScreenGui.Parent = LocalPlayer.PlayerGui
    else
        LocalPlayer.CharacterAdded:Wait()
        ScreenGui.Parent = LocalPlayer:FindFirstChild("PlayerGui")
    end

    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Parent = ScreenGui
    ToggleButton.Size = UDim2.new(0, 150, 0, 50)
    ToggleButton.Position = UDim2.new(0.05, 0, 0.05, 0)
    ToggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleButton.TextScaled = true
    ToggleButton.Text = "Auto Guard: OFF"

    -- Toggle function
    ToggleButton.MouseButton1Click:Connect(function()
        autoGuardEnabled = not autoGuardEnabled
        ToggleButton.Text = autoGuardEnabled and "Auto Guard: ON" or "Auto Guard: OFF"
        ToggleButton.BackgroundColor3 = autoGuardEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(50, 50, 50)

        if not autoGuardEnabled then
            Humanoid:Move(Vector3.zero) -- Stop movement when disabled
        end
    end)
end

createGUI()

-- Check if a player has the basketball
local function playerHasBall(player)
    if player and player.Character then
        local char = player.Character
        local targetHRP = char:FindFirstChild("HumanoidRootPart")
        if targetHRP then
            local distanceToBall = (Basketball.Position - targetHRP.Position).Magnitude
            return distanceToBall < 5 -- Adjust if needed
        end
    end
    return false
end

-- Find the closest player with the ball
local function getClosestPlayerWithBall()
    local closestPlayer = nil
    local closestDistance = math.huge

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local targetHRP = player.Character:FindFirstChild("HumanoidRootPart")

            if targetHRP and playerHasBall(player) then
                local distance = (HRP.Position - targetHRP.Position).Magnitude

                if distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = targetHRP
                end
            end
        end
    end

    return closestPlayer
end

-- Get actual movement direction (works for R15 & custom rigs)
local function getMovementDirection(hrp)
    if hrp and hrp.Velocity.Magnitude > 0.1 then
        return hrp.Velocity.Unit -- Get actual movement direction
    else
        return hrp.CFrame.LookVector.Unit -- Default to facing direction if not moving
    end
end

-- Auto guard function
local function autoGuard()
    if not autoGuardEnabled then return end

    local targetHRP = getClosestPlayerWithBall()
    if targetHRP then
        local movementDirection = getMovementDirection(targetHRP) -- Get movement direction
        local correctGuardPosition = targetHRP.Position - (movementDirection * 5) -- Stay 5 studs in front

        -- Prediction: Adjust guard position slightly ahead of movement direction
        local predictedPosition = correctGuardPosition + (targetHRP.Velocity * 0.1)

        -- If we're out of position, move back in front of the ball handler
        if (HRP.Position - predictedPosition).Magnitude > 1 then
            Humanoid:MoveTo(predictedPosition)
        end
    else
        Humanoid:MoveTo(HRP.Position) -- Stay still if no one has the ball
    end
end

-- Run auto guard every frame
RunService.RenderStepped:Connect(autoGuard)
