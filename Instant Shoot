local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

-- Get the local player
local player = Players.LocalPlayer

-- Wait for PlayerGui to load
local playerGui = player:WaitForChild("PlayerGui")

-- Wait for "Mobile" inside PlayerGui
local mobile = playerGui:WaitForChild("Mobile")

-- Wait for "Offense" inside Mobile
local offense = mobile:WaitForChild("Offense")

-- Wait for the "Shoot" button inside Offense
local shootButton = offense:WaitForChild("Shoot")

-- Function to trigger the **second** event (now first)
local function triggerSecondEvent()
    local args = {
        [1] = false,
        [2] = -0.9778013515472412,
        [3] = true
    }
    ReplicatedStorage.Events.Shoot:FireServer(unpack(args))
end

-- Function to trigger the **first** event (now second)
local function triggerFirstEvent()
    local args = {
        [1] = true,
        [2] = 100
    }
    ReplicatedStorage.Events.Shoot:FireServer(unpack(args))
end

-- **Disable any existing scripts attached to the button**
for _, v in pairs(shootButton:GetDescendants()) do
    if v:IsA("Script") or v:IsA("LocalScript") then
        v.Disabled = true
    end
end

-- **Remove all existing event connections from the button**
local function disconnectAllEvents(object)
    for _, connection in pairs(getconnections(object.MouseButton1Click)) do
        connection:Disconnect()
    end
    for _, connection in pairs(getconnections(object.Activated)) do
        connection:Disconnect()
    end
end

pcall(disconnectAllEvents, shootButton) -- Prevents errors if no events exist

-- **Override the button's function to trigger events on click and hold**
local isHolding = false

shootButton.MouseButton1Down:Connect(function()
    isHolding = true
    triggerSecondEvent() -- now second event goes first
end)

shootButton.MouseButton1Up:Connect(function()
    if isHolding then
        triggerFirstEvent() -- then first event
        isHolding = false
    end
end)

-- **Allow "Q" key, Xbox X button, and PS4 Square button to trigger the function**
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed then
        if input.KeyCode == Enum.KeyCode.Q or 
           input.KeyCode == Enum.KeyCode.ButtonX or 
           input.KeyCode == Enum.KeyCode.ButtonSquare then
            triggerSecondEvent()
            triggerFirstEvent()
        end
    end
end)
